On a un serveur du côté prolog qui est mis sur un port qu'on choisit, on a un handler qui "relie" vers l'html et qu'on peut modifier pour amener vers notre partie. 

L'html lit le script de echo.js qui va ouvrir la connexion à un websocket avec la fct openWebsocket. On a ensuite une autre fct pour envoyer le message via la connexion et enfin une 3e pour recevoir qui est fixé dans la première. 

On a un second handler du côté prolog qui s'occupe de se connecter au websocket qui se trouve à /echo. La fct upgrade permet de passer une requête html sous le protocole websocket.

On utile alors le prédicat echo précisé dans l'upgrade pour recevoir le message en format json par le websocket, obtenir une réponse via get_response/3 puis la renvoyer et ensuite faire une récursion pour garder la connexion.

Du coup, ici la partie prolog est normalement ok et facilement adaptable, par contre il faut adapter echo.js au reste, je pense en reliant le fichier directement à notre html et/ou aux endroits où on a besoin de faire les requêtes vers le serveur.

Deux petites notes: 
- Parfois j'ai une erreur d'accès interdit quand je mets les fichiers Web dans un autre dossier que la partie serveur, je sais pas trop c'est lié à quoi.
- Pour le moment, on a dans le js une variable isBot qui peut être true ou false et qui permet de savoir si la requête vise le bot ou l'ia, le problème c'est que actuellement elle se change manuellement.